BreaKmer example data README
-------

To get started in running the example data, first make sure all the BreaKmer software dependencies are installed and running properly on your system. 

The follow files have been provided in the example_data directory to run the example data:
B2M.bam - sorted BAM file containing aligned reads to B2M.
B2M.bam.bai - index of B2M.bam file.
breakmer.cfg - BreaKmer config file.
cutadapt.cfg- Cutadapt configuration file containing the Illumina adapters to trim from sequences.
genes.bed - BED file specifying coordinates for B2M tiled regions.
ref_seq/B2M - all the extracted B2M reference sequences and associated kmer files.

The following files have been provided in the BreaKmer directory (one level up from example_data directory) to run the example data:
<path to BreaKmer directory>/bin/cutadapt-1.5.tar.gz - uncompress and use binary in bin directory
<path to BreaKmer directory>/bin/jellyfish-1.1.11.tar.gz - uncompress and follow installation instructions, binary should be in the bin directory after successfull install
<path to BreaKmer directory>/bin/blat - blat binary for linux x86 64bit
<path to BreaKmer directory>/bin/gfClient - blat server binary for linux x86 64bit
<path to BreaKmer directory>/bin/gfServer - blat server binary for linux x86 64bit
<path to BreaKmer directory>/ref/ucsc_hg19_refgene.txt
<path to BreaKmer directory>/ref/ucsc_hg19_rmsk.bed

To analyze the example data follow these steps:

1. Edit the template configuration file appropriately (breakmer.cfg).
  - We have provided all the files necessary to run the example data other than the genome fasta file (see below). 
  - The configuration file paths need to be changed accordingly.
  - To create reference genome fasta file for example data:
    a. Downloaded the chromFa.tar.gz file from UCSC Genome Browser (http://hgdownload.soe.ucsc.edu/goldenPath/hg19/bigZips/chromFa.tar.gz). 
    b. Make directory named genome in <path to BreaKmer directory>/ref
    c. Unpack chromFa.tar.gz in <path to BreaKmer directory>/ref/genome (tar -xvzf chromFa.tar.gz) - this will output many reference chromosome sequence fasta files (e.g., chr1.fa, chr2.fa, chr3.fa, etc...)
    d. Concatenate all the primary chromosomes together (chr1, chr2, chr3,...chrX, chrY, chrM) in order (i.e., cat chr1.fa chr2.fa ... chrM > hg19_ref_genome.primary-assembly.fa) - this will produce one file containing all the chromosome sequences.
    e. Rename the sequences by removing all the 'chr' since these are the names of the chromosomes in our example data. (sed -i 's/chr//g' hg19_ref_genome.primary-assembly.fa)
    f. Move reference genome file to <path to BreaKmer directory>/ref

analysis_name=example
targets_bed_file=<path to example_data directory>/genes.bed
sample_bam_file=<path to example_data directory>/B2M.bam
analysis_dir=<path to example_data directory>
reference_data_dir=<path to example_data directory>/ref_seq
cutadapt=<path to BreaKmer directory>/bin/cutadapt-1.5/bin/cutadapt
cutadapt_config_file=<path to example_data directory>/cutadapt.cfg
jellyfish=<path to BreaKmer directory>/bin/jellyfish-1.1.11/bin/jellyfish
blat=<path to BreaKmer directory>/bin/blat
gfclient=<path to BreaKmer directory>/bin/gfClient
gfserver=<path to BreaKmer directory>/bin/gfServer
fatotwobit=<path to BreaKmer directory>/bin/faToTwoBit
reference_fasta=<path to BreaKmer directory>/ref/<GENOME FASTA FILE>
gene_annotation_file=<path to BreaKmer directory>/ref/ucsc_hg19_refgene.txt
repeat_mask_file=<path to BreaKmer directory>/ref/ucsc_hg19_rmsk.bed
kmer_size=15 

2. Run BreaKmer
  - python <path to BreaKmer directory>/breakmer.py <path to example directory>/breakmer.cfg

3. The output files will be within the designated analysis directory (i.e., example_data) as specified in the configuration file.

The final output file with the results will be within the example_indel_svs.out file with the following:
genes	target_breakpoints	align_cigar	mismatches	strands	rep_overlap_segment_len	sv_type	split_read_count	nkmers	disc_read_count	breakpoint_coverages	contig_id	contig_seq
B2M	chr15:45007873-45008026 (D153)	89M153D50M	0	+	0.0:139	indel	12	14	0	176,53	B2M_contig1	AAGGACTGGTCTTTCTATCTCTTGTACTACACTGAATTCACCCCCACTGAAAAAGATGAGTATGCCTGCCGTGTGAACCATGTGACTTTACAATCTGCATATTGGGATTGTCAGGGAATGTTCTTAAAGATCAGATTAG

The results indicates:
genes = B2M - Event occurs in B2M gene
target_breakpoints = chr15:45007873-45008026 (D153) - 153 bp deletion with breakpoints located at 45007873 and 45008026
align_cigar = 89M153D50M - 89 bp of the contig match the reference, 153 bp are deleted in the contig sequence compared to reference, and 50 bp are matching
mismatches = 0 - No single nucleotide mismatches between the reference sequence and the contig sequence.
strands = + - Contig aligns on the + strand of the reference
rep_overlap_segment_len = 0.0:139 - Two values indications 1. % of repeat overlap 2. Contig segment matching length
sv_type = indel
split_read_count = 12 - Number of split reads supporting the event
nkmers = 14 - Number of sample only kmers used to build the contig
disc_read_count = 0 - No discordantly mapped read pairs extracted for this event.
breakpoint_coverages = 176,53 - Number of non-duplicated aligned sequences at the inferred breakpoint locations
contig_id = B2M_contig1
contig_seq = AAGGACTGGTCTTTCTATCTCTTGTACTACACTGAATTCACCCCCACTGAAAAAGATGAGTATGCCTGCCGTGTGAACCATGTGACTTTACAATCTGCATATTGGGATTGTCAGGGAATGTTCTTAAAGATCAGATTAG - contig sequence assembled containing this event.

The output of the program should appear in the example_data/output and example_data/targets directories. The follow example files have been provided to check the users output and the expected output.

example_output/ - Directory containing the example output that should be expected with a successful run.
 example_summary.out - Example summary output file.
 example_indel_svs.out - Example indel output file.
 B2M/
   B2M_indel_svs.out - Example indel output file for B2M.
   contig1_reads.sorted.bam - Example BAM file containing extracted reads for detected indel event in B2M.
   contig1_svs.out - Example output file for SV event found in a contig.
   contig1_reads.bam - Unsorted extracted reads in BAM format.
   contig_reads.sorted.bam.bai - Index of sorted extracted reads BAM file.
example_targets/ - Directory containing the example targets output.
 B2M/
   data/
     B2M_sv_reads.bam - BAM formatted file with extracted reads from the defined B2M region.
     B2M_sv_reads.fastq - Fastq formatted file with the extracted reads from the defined B2M region.
     B2M_sv_reads.sorted.bam - Sorted BAM of extracted reads. 
     B2M_sv_reads.sorted.bam.bai - Index of the sorted BAM file.
     B2M_sv_reads_cleaned.fastq - Fastq formatted file containing the read sequences after they have been cleaned of adapter and low-quality sequence.
     B2M_sv_reads_cleaned_filtered.fastq - Cleaned reads that have been further filtered if the original soft-clipped sequences were removed.
     B2M_sv_sc_seqs.fa - Fasta formatted file containing the soft-clipped sequences.
     B2M_sv_reads_cleaned_filtered.fastq_15mers_counts_0 - Jellyfish intermediate output file for the 15mers generated from the filtered reads.
     B2M_sv_reads_cleaned_filtered.fastq_15mers_dump_0 - Jellyfish final output file of the 15mers generated from the filtered reads.
     B2M_sv_sc_seqs.fa_15mers_counts_0 - Jellyfish intermediate output file for the 15mers generated from the unaligned sequences from the extracted reads.
     B2M_sv_sc_seqs.fa_15mers_dump_0 - Jellyfish final output file of the 15mers generated from the unaligned sequences from the extracted reads.
   contigs/
     contig/
       blat_res_target.psl - Raw BLAT output from re-aligning the contig to the target region reference sequence.
       blat_res_target.psl.mod - Modified BLAT output with the correct genomic chromosome and coordinates from hit.
       contig1.fa - Fast formatted file containing contig1 consensus sequence.
       contig1.fq - Fastq formatted file containing the read sequences used for assemblying contig1.
       contig1_svs.out - The SV formatted output for contig1.
   kmers/
     B2M_sample_kmers.out - Sample only 15-mers with number of reads in which they are found.
     B2M_sample_kmers_merged.out - The 15-mers and the IDs of the reads used to assemble contigs.
